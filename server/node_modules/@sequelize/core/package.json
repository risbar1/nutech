{
  "_args": [
    [
      "@sequelize/core@7.0.0-alpha.37",
      "/Volumes/data/risky/aplikasi/sistemakademik/service"
    ]
  ],
  "_from": "@sequelize/core@7.0.0-alpha.37",
  "_id": "@sequelize/core@7.0.0-alpha.37",
  "_inBundle": false,
  "_integrity": "sha512-xDpfOqQI3luNjpZ4ywIcteZg6wgY7Ov0T/4tTPuE0ZVNROTsZFhnpn/yYzQcskE2h6T7uF5CzSR2exH3OMhlBg==",
  "_location": "/@sequelize/core",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "@sequelize/core@7.0.0-alpha.37",
    "name": "@sequelize/core",
    "escapedName": "@sequelize%2fcore",
    "scope": "@sequelize",
    "rawSpec": "7.0.0-alpha.37",
    "saveSpec": null,
    "fetchSpec": "7.0.0-alpha.37"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@sequelize/core/-/core-7.0.0-alpha.37.tgz",
  "_spec": "7.0.0-alpha.37",
  "_where": "/Volumes/data/risky/aplikasi/sistemakademik/service",
  "bugs": {
    "url": "https://github.com/sequelize/sequelize/issues"
  },
  "dependencies": {
    "@types/debug": "^4.1.7",
    "@types/validator": "^13.7.5",
    "bnf-parser": "3.1.6",
    "dayjs": "^1.11.5",
    "debug": "^4.3.4",
    "dottie": "^2.0.2",
    "fast-glob": "^3.2.12",
    "inflection": "^3.0.0",
    "lodash": "^4.17.21",
    "pg-connection-string": "^2.5.0",
    "pg-hstore": "^2.3.4",
    "retry-as-promised": "^7.0.3",
    "semver": "^7.3.7",
    "sequelize-pool": "^8.0.0",
    "toposort-class": "^1.0.1",
    "type-fest": "^3.0.0",
    "uuid": "^9.0.0",
    "validator": "^13.7.0",
    "wkx": "^0.5.0"
  },
  "description": "Sequelize is a promise-based Node.js ORM tool for Postgres, MySQL, MariaDB, SQLite, Microsoft SQL Server, Amazon Redshift, Snowflakeâ€™s Data Cloud, Db2, and IBM i. It features solid transaction support, relations, eager and lazy loading, read replication and more.",
  "devDependencies": {
    "@types/chai": "4.3.11",
    "@types/chai-as-promised": "7.1.8",
    "@types/chai-datetime": "0.0.39",
    "@types/ibm_db": "2.0.16",
    "@types/lodash": "4.14.202",
    "@types/mocha": "10.0.6",
    "@types/pg": "8.11.0",
    "@types/semver": "7.5.6",
    "@types/sinon": "17.0.3",
    "@types/sinon-chai": "3.2.12",
    "@types/snowflake-sdk": "1.6.20",
    "@types/tedious": "4.0.14",
    "@types/uuid": "9.0.8",
    "chai": "4.4.1",
    "chai-as-promised": "7.1.1",
    "chai-datetime": "1.8.0",
    "delay": "5.0.0",
    "expect-type": "0.13.0",
    "fs-jetpack": "5.1.0",
    "ibm_db": "3.2.3",
    "lcov-result-merger": "5.0.0",
    "mariadb": "3.2.3",
    "mocha": "10.3.0",
    "moment": "2.30.1",
    "mysql2": "3.9.1",
    "nyc": "15.1.0",
    "odbc": "2.4.8",
    "p-map": "4.0.0",
    "p-props": "4.0.0",
    "p-settle": "4.1.1",
    "p-timeout": "4.1.0",
    "pg": "8.11.3",
    "rimraf": "5.0.5",
    "sinon": "17.0.1",
    "sinon-chai": "3.7.0",
    "snowflake-sdk": "1.9.3",
    "sqlite3": "5.1.7",
    "tedious": "16.7.0"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "exports": {
    ".": {
      "types": "./types/index.d.ts",
      "import": "./lib/index.mjs",
      "require": "./lib/index.js"
    },
    "./decorators-legacy": {
      "types": "./types/decorators/legacy/index.d.ts",
      "import": "./lib/decorators/legacy/index.mjs",
      "require": "./lib/decorators/legacy/index.js"
    },
    "./_non-semver-use-at-your-own-risk_/*": {
      "types": "./types/*",
      "default": "./lib/*"
    },
    "./package.json": "./package.json"
  },
  "files": [
    "lib",
    "types",
    "index.js"
  ],
  "funding": [
    {
      "type": "opencollective",
      "url": "https://opencollective.com/sequelize"
    }
  ],
  "gitHead": "8b3b8283dbb7a5eb10b94447492c20907600667a",
  "homepage": "https://sequelize.org/",
  "keywords": [
    "mysql",
    "mariadb",
    "sqlite",
    "postgresql",
    "postgres",
    "pg",
    "mssql",
    "db2",
    "ibm_db",
    "sql",
    "sqlserver",
    "snowflake",
    "orm",
    "nodejs",
    "object relational mapper",
    "database",
    "db"
  ],
  "license": "MIT",
  "main": "./lib/index.js",
  "name": "@sequelize/core",
  "peerDependenciesMeta": {
    "ibm_db": {
      "optional": true
    },
    "mariadb": {
      "optional": true
    },
    "mysql2": {
      "optional": true
    },
    "odbc": {
      "optional": true
    },
    "pg": {
      "optional": true
    },
    "snowflake-sdk": {
      "optional": true
    },
    "sqlite3": {
      "optional": true
    },
    "tedious": {
      "optional": true
    }
  },
  "publishConfig": {
    "access": "public",
    "tag": "alpha"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/sequelize/sequelize.git"
  },
  "scripts": {
    "----------------------------------------- all tests ---------------------------------------------": "",
    "----------------------------------------- coverage ------------------------------------------------": "",
    "----------------------------------------- development ---------------------------------------------": "",
    "----------------------------------------- integration tests ---------------------------------------------": "",
    "----------------------------------------- static analysis -----------------------------------------": "",
    "----------------------------------------- tests ---------------------------------------------------": "",
    "----------------------------------------- unit tests ---------------------------------------------": "",
    "_test-unit": "yarn mocha \"test/unit/**/*.test.[tj]s\"",
    "build": "node ../../build-packages.mjs core",
    "cover": "rimraf coverage && yarn teaser && yarn cover-integration && yarn cover-unit && yarn merge-coverage",
    "cover-integration": "cross-env COVERAGE=true nyc --reporter=lcovonly yarn mocha \"test/integration/**/*.test.[tj]s\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/integration.info')\"",
    "cover-unit": "cross-env COVERAGE=true nyc --reporter=lcovonly yarn mocha \"test/unit/**/*.test.[tj]s\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/unit.info')\"",
    "merge-coverage": "lcov-result-merger \"coverage/*.info\" \"coverage/lcov.info\"",
    "mocha": "mocha -r ../../test/register-esbuild.js",
    "teaser": "ts-node test/teaser.ts",
    "test": "yarn build && yarn test-typings && yarn teaser && yarn _test-unit && yarn test-integration",
    "test-db2": "cross-env DIALECT=db2 yarn test",
    "test-ibmi": "cross-env DIALECT=ibmi yarn test",
    "test-integration": "yarn mocha \"test/integration/**/*.test.[tj]s\"",
    "test-integration-all": "yarn test-integration-mariadb && yarn test-integration-mysql && yarn test-integration-postgres && yarn test-integration-postgres-native && yarn test-integration-sqlite && yarn test-integration-mssql && yarn test-integration-db2 && yarn test-integration-ibmi && yarn test-integration-snowflake",
    "test-integration-db2": "cross-env DIALECT=db2 yarn test-integration",
    "test-integration-ibmi": "cross-env DIALECT=ibmi yarn test-integration",
    "test-integration-mariadb": "cross-env DIALECT=mariadb yarn test-integration",
    "test-integration-mssql": "cross-env DIALECT=mssql yarn test-integration",
    "test-integration-mysql": "cross-env DIALECT=mysql yarn test-integration",
    "test-integration-postgres": "cross-env DIALECT=postgres yarn test-integration",
    "test-integration-postgres-native": "cross-env DIALECT=postgres-native yarn test-integration",
    "test-integration-snowflake": "cross-env DIALECT=snowflake yarn test-integration",
    "test-integration-sqlite": "cross-env DIALECT=sqlite yarn test-integration",
    "test-mariadb": "cross-env DIALECT=mariadb yarn test",
    "test-mssql": "cross-env DIALECT=mssql yarn test",
    "test-mysql": "cross-env DIALECT=mysql yarn test",
    "test-postgres": "cross-env DIALECT=postgres yarn test",
    "test-postgres-native": "cross-env DIALECT=postgres-native yarn test",
    "test-smoke": "yarn mocha \"test/smoke/**/*.test.[tj]s\" --timeout 600000",
    "test-sqlite": "cross-env DIALECT=sqlite yarn test",
    "test-typings": "tsc --noEmit && tsc -b test/tsconfig.json",
    "test-unit": "yarn test-unit-all",
    "test-unit-all": "yarn test-unit-mariadb && yarn test-unit-mysql && yarn test-unit-postgres && yarn test-unit-mssql && yarn test-unit-sqlite && yarn test-unit-snowflake && yarn test-unit-db2 && yarn test-unit-ibmi",
    "test-unit-db2": "cross-env DIALECT=db2 yarn _test-unit",
    "test-unit-ibmi": "cross-env DIALECT=ibmi yarn _test-unit",
    "test-unit-mariadb": "cross-env DIALECT=mariadb yarn _test-unit",
    "test-unit-mssql": "cross-env DIALECT=mssql yarn _test-unit",
    "test-unit-mysql": "cross-env DIALECT=mysql yarn _test-unit",
    "test-unit-postgres": "cross-env DIALECT=postgres yarn _test-unit",
    "test-unit-snowflake": "cross-env DIALECT=snowflake yarn _test-unit",
    "test-unit-sqlite": "cross-env DIALECT=sqlite yarn _test-unit"
  },
  "support": true,
  "type": "commonjs",
  "types": "./types/index.d.ts",
  "version": "7.0.0-alpha.37"
}
